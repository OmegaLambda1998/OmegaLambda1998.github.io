@use "meta/colourscheme" as cs;
@use "meta/breakpoints" as bp;

// === Basics ===

nav ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
  min-width: 0;
  width: 100%;
  height: 10vh;
  font-size: 3rem;
  display: inline-grid;
  grid-template-rows: 1fr;
  grid-template-columns: auto;
  grid-auto-flow: column;
  grid-auto-columns: auto;
  li:first-child {
    justify-self: start;
  }
  li:has(input.collapse) {
      justify-self: end;
  }
  li {
    justify-self: center;
    // min-width: 25%;
    min-width: 0;
    max-width: 100%;
    min-height: 100%;
    background-color: transparent;
    a {
      width: 100%;
      height: 100%;
      text-decoration: none;
      padding: 2px;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    input.collapse {
      margin: 0;
      padding: 0;
      width: 100%;
      height: 100%;
      text-decoration: none;
      padding: 2px;
      display: flex;
      justify-content: center;
      align-items: center;
    }
  }
}

// === Colour Theme ===

@include cs.themed(cs.$themes) {
  nav ul li {
    a {
      color: cs.cs("text");
    }
    &:not(:first-child):not(:last-child) {
      border-bottom: 1px solid cs.cs("hl");
    }
  }
}

// Invert colour theme on hover
@include cs.themed(cs.$themes, $invert: true) {
  nav ul li {
    &:hover {
      a {
        color: cs.cs("text");
      }
      &:not(:first-child):not(:last-child) {
        border-bottom: 1px solid cs.cs("hl");
      }
    }
  }
}

// === Breakpoints ===

// BP: lg
nav ul {
  @include bp.break(lg) {
    height: 10vh;
  font-size: 2.5rem;
  }
}

// BP: md
nav ul {
  @include bp.break(md) {
    height: 10vh;
  font-size: 2.25rem;
  }
}

// BP: sm
nav ul {
  @include bp.break(sm) {
    height: 10vh;
  font-size: 2rem;
  }
}

// BP: xs
nav ul {
  @include bp.break(xs) {
    height: 12.5vh;
  font-size: 1.75rem;
  }
}

// BP: xxs
nav ul {
  @include bp.break(xxs) {
    height: 15vh;
    font-size: 1.5rem;
  }
}


// When on a small display, hide nav elements and display collapsible button
@include bp.break(xxxs) {
  nav ul {
    height: 20vh;
    font-size: 1.25rem;
    li:first-child {
      grid-column: 1;
      grid-row: 1 / span 2;
    }
    li:last-child {
      grid-column: -2;
      grid-row: 1 / span 2;
      width: auto;
    }
    grid-template-columns: auto 1fr 1fr auto;
    grid-auto-rows: 1fr;
    grid-auto-flow: row;
  }
  li.collapse {
      display: none;
  }
  // If the collapsible button is checked, show the hidden items
  nav:has(input.collapse:checked) {
      ul li.collapse {
        display: list-item
    }
  }
}

@include bp.break(xxxs, $gt: true) {
  nav ul li:has(input.collapse) {
    display: none;
  }
}

// When on a small display, hide nav elements and display collapsible button
@include bp.break(xxxxs) {
  nav ul {
    li:first-child {
      grid-column: 1;
      grid-row: 1 / span 4;
    }
    li:last-child {
      grid-column: -2;
      grid-row: 1 / span 4;
      width: auto;
    }
    grid-template-columns: auto 1fr auto;
    grid-auto-rows: 1fr;
    grid-auto-flow: row;
  }
}
